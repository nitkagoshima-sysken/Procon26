#include <gtest/gtest.h>
#include "../procon26_modlib.hpp"
#include "../procon26_modlib.hpp"
#include "../procon26_modio.hpp"

TEST(procon26_modlib, countBit)
{
    ASSERT_EQ(countBit(0x00), 0);
    ASSERT_EQ(countBit(0x01), 1);
    ASSERT_EQ(countBit(0x80), 1);
    ASSERT_EQ(countBit(0x44), 2);
    ASSERT_EQ(countBit(0xCB), 5);
}

TEST(procon26_modlib, countBitOfStone)
{
    ASSERT_EQ(countBitOfStone(EMPTY_STONE), 0);
    ASSERT_EQ(countBitOfStone(getStoneByString(
                    "01110101"
                    "00011111"
                    "00011111"
                    "00000100"
                    "00000000"
                    "00000000"
                    "00000000"
                    "00000000"
                    )), 16);
    ASSERT_EQ(countBitOfStone(getStoneByString(
                    "01111101"
                    "00011111"
                    "00011111"
                    "00010100"
                    "00011000"
                    "00011110"
                    "00011110"
                    "00000010"
                    )), 29);
}

TEST(procon26_modlib, countBitOfBoard)
{
    ASSERT_EQ(countBitOfBoard(EMPTY_BOARD), 0);
    ASSERT_EQ(countBitOfBoard(getBoardByString(
                    "10010000000100000000000000000111000000000000000000000000000001110000000000100000001000000000011100001000000000000100000000000111"
                    "00000000000000000001000000000111000000000000000000010000000001110000000000000010000000010000011100000000100010000000000000000111"
                    "01000000000100000000000000000111110000000000000000000000000001111000000100000000000000001000011100000000000010000000000000000111"
                    "00000001000000000000001000001111000000000000000000000000000001110000000000000000000000000010011100000000001000000000000000000111"
                    "01000000000010000000000000000111000000001000000001000000000001110000100000000000000000010000011100000000010000000000000001000111"
                    "01000000000000000000000000000111000000011000011001000000000001110000000000101100000000000000011100000000000000000000000000000111"
                    "00000000000000000000000000000111000000000000010000000000000001110000000000000000000000000010011100000000000000000000000000000111"
                    "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
                    )), 257);
    ASSERT_EQ(countBitOfBoard(getBoardByString(
                    "00000000000000000000000000000111"
                    "00000000000000000000000000000111"
                    "00000000000000000000000000000111"
                    "00000000000000000000000000000111"
                    "00000000000000000101000000000111"
                    "00000000000000011111000000000111"
                    "00000000000000011111111111111111"
                    "00000000000000011100000000000111"
                    "00000000000000010000000000000111"
                    "00000000000000011110000000000111"
                    "00000000000000011110000000000111"
                    "00000000000000000010000000000111"
                    "00000000000000000111000000000111"
                    "00000000000000011111000000000111"
                    "00000000000000011111000000000111"
                    "00000000000000011100000000000111"
                    "00000000000000010000000000000111"
                    "00000000000000011110000000000111"
                    "00000000000000011110000000000111"
                    "00000000000000000010000000000111"
                    "00000000000000000000000000000111"
                    "00000000000000000000000000000111"
                    "00000000000000000000000000000111"
                    "00000000000000000000000000000111"
                    "00000000000000000000000000000111"
                    "00000000000000000000000000000111"
                    "00000000000000000000000000000111"
                    "00000000000000000000000000000111"
                    "11111111111111111111111111111111"
                    "11111111111111111111111111111111"
                    "11111111111111111111111111111111"
                    "11111111111111111111111111111111"
                    )), 272);
}

TEST(procon26_modlib, isEmptyStone)
{
    ASSERT_TRUE(isEmptyStone(EMPTY_STONE));
    ASSERT_FALSE(isEmptyStone(getStoneByString(
                    "01110101"
                    "00011111"
                    "00011111"
                    "00000100"
                    "00000000"
                    "00000000"
                    "00000000"
                    "00000000"
                    )));
}

TEST(procon26_modlib, isEmptyBoard)
{
    ASSERT_TRUE(isEmptyBoard(EMPTY_BOARD));
    ASSERT_FALSE(isEmptyBoard(getBoardByString(
                    "10010000000100000000000000000111000000000000000000000000000001110000000000100000001000000000011100001000000000000100000000000111"
                    "00000000000000000001000000000111000000000000000000010000000001110000000000000010000000010000011100000000100010000000000000000111"
                    "01000000000100000000000000000111110000000000000000000000000001111000000100000000000000001000011100000000000010000000000000000111"
                    "00000001000000000000001000001111000000000000000000000000000001110000000000000000000000000010011100000000001000000000000000000111"
                    "01000000000010000000000000000111000000001000000001000000000001110000100000000000000000010000011100000000010000000000000001000111"
                    "01000000000000000000000000000111000000011000011001000000000001110000000000101100000000000000011100000000000000000000000000000111"
                    "00000000000000000000000000000111000000000000010000000000000001110000000000000000000000000010011100000000000000000000000000000111"
                    "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
                    )));
}

TEST(procon26_modlib, isEqualStone)
{
    ASSERT_TRUE(isEqualStone(EMPTY_STONE, EMPTY_STONE));
    ASSERT_TRUE(isEqualStone(
                getStoneByString(
                    "01110101"
                    "00011111"
                    "00011111"
                    "00000100"
                    "00000000"
                    "00000000"
                    "00000000"
                    "00000000"
                    ),
                getStoneByString(
                    "01110101"
                    "00011111"
                    "00011111"
                    "00000100"
                    "00000000"
                    "00000000"
                    "00000000"
                    "00000000"
                    )
                    ));
}

TEST(procon26_modlib, NOT)
{
    ASSERT_TRUE(isEqualStone(
                ~*getStoneByString(
                    "01110101"
                    "00011111"
                    "00011111"
                    "00000100"
                    "00000000"
                    "00000000"
                    "00000000"
                    "00000000"
                    ),
                getStoneByString(
                    "10001010"
                    "11100000"
                    "11100000"
                    "11111011"
                    "11111111"
                    "11111111"
                    "11111111"
                    "11111111"
                    )
                    ));
}

TEST(procon26_modlib, AND)
{
    ASSERT_TRUE(isEqualStone(
                *getStoneByString(
                    "01110101"
                    "00011111"
                    "00011111"
                    "00000100"
                    "00000000"
                    "00000000"
                    "00000000"
                    "00000000"
                    ) &
                *getStoneByString(
                    "00001100"
                    "00001100"
                    "00000110"
                    "00000100"
                    "00000110"
                    "00000110"
                    "00000010"
                    "00000000"
                    ),
        getStoneByString(
                "00000100"
                "00001100"
                "00000110"
                "00000100"
                "00000000"
                "00000000"
                "00000000"
                "00000000"
                )
            ));
}

TEST(procon26_modlib, OR)
{
    ASSERT_TRUE(isEqualStone(
                *getStoneByString(
                    "01110101"
                    "00011111"
                    "00011111"
                    "00000100"
                    "00000000"
                    "00000000"
                    "00000000"
                    "00000000"
                    ) |
                *getStoneByString(
                    "00001100"
                    "00001100"
                    "00000110"
                    "00000100"
                    "00000110"
                    "00000110"
                    "00000010"
                    "00000000"
                    ),
        getStoneByString(
                "01111101"
                "00011111"
                "00011111"
                "00000100"
                "00000110"
                "00000110"
                "00000010"
                "00000000"
                )
            ));
}

TEST(procon26_modlib, XOR)
{
    ASSERT_TRUE(isEqualStone(
                *getStoneByString(
                    "01110101"
                    "00011111"
                    "00011111"
                    "00000100"
                    "00000000"
                    "00000000"
                    "00000000"
                    "00000000"
                    ) ^
                *getStoneByString(
                    "00001100"
                    "00001100"
                    "00000110"
                    "00000100"
                    "00000110"
                    "00000110"
                    "00000010"
                    "00000000"
                    ),
        getStoneByString(
                "01111001"
                "00010011"
                "00011001"
                "00000000"
                "00000110"
                "00000110"
                "00000010"
                "00000000"
                )
            ));
}

TEST(procon26_modlib, shiftUp)
{
    ASSERT_TRUE(isEqualStone(
                getStoneByString(
                    "00011111"
                    "00011111"
                    "00000100"
                    "00000000"
                    "00000000"
                    "00000000"
                    "00000000"
                    "00000000"
                    ),
                shiftUp(getStoneByString(
                        "01110101"
                        "00011111"
                        "00011111"
                        "00000100"
                        "00000000"
                        "00000000"
                        "00000000"
                        "00000000"
                        ), 1
                    )));
    ASSERT_TRUE(isEqualStone(
                getStoneByString(
                    "00000100"
                    "00000000"
                    "00000000"
                    "00000000"
                    "00000000"
                    "00000000"
                    "00000000"
                    "00000000"
                    ),
                shiftUp(getStoneByString(
                        "01110101"
                        "00011111"
                        "00011111"
                        "00000100"
                        "00000000"
                        "00000000"
                        "00000000"
                        "00000000"
                        ), 3
                    )));
    ASSERT_TRUE(isEqualStone(
                getStoneByString(
                    "00011111"
                    "00011111"
                    "00000100"
                    "00000000"
                    "00000000"
                    "00000000"
                    "00000000"
                    "11111111"
                    ),
                shiftUp(getStoneByString(
                        "01110101"
                        "00011111"
                        "00011111"
                        "00000100"
                        "00000000"
                        "00000000"
                        "00000000"
                        "00000000"
                        ), 1, 1
                    )));
    ASSERT_TRUE(isEqualStone(
                getStoneByString(
                    "00000100"
                    "00000000"
                    "00000000"
                    "00000000"
                    "00000000"
                    "11111111"
                    "11111111"
                    "11111111"
                    ),
                shiftUp(getStoneByString(
                        "01110101"
                        "00011111"
                        "00011111"
                        "00000100"
                        "00000000"
                        "00000000"
                        "00000000"
                        "00000000"
                        ), 3, 1
                    )));
}

TEST(procon26_modlib, shiftDown)
{
    ASSERT_TRUE(isEqualStone(
                getStoneByString(
                    "00000000"
                    "01110101"
                    "00011111"
                    "00011111"
                    "00000100"
                    "00000000"
                    "00000000"
                    "00000000"
                    ),
                shiftDown(getStoneByString(
                        "01110101"
                        "00011111"
                        "00011111"
                        "00000100"
                        "00000000"
                        "00000000"
                        "00000000"
                        "00000000"
                        ), 1
                    )));
    ASSERT_TRUE(isEqualStone(
                getStoneByString(
                    "00000000"
                    "00000000"
                    "00000000"
                    "01110101"
                    "00011111"
                    "00011111"
                    "00000100"
                    "00000000"
                    ),
                shiftDown(getStoneByString(
                        "01110101"
                        "00011111"
                        "00011111"
                        "00000100"
                        "00000000"
                        "00000000"
                        "00000000"
                        "00000000"
                        ), 3
                    )));
    ASSERT_TRUE(isEqualStone(
                getStoneByString(
                    "11111111"
                    "01110101"
                    "00011111"
                    "00011111"
                    "00000100"
                    "00000000"
                    "00000000"
                    "00000000"
                    ),
                shiftDown(getStoneByString(
                        "01110101"
                        "00011111"
                        "00011111"
                        "00000100"
                        "00000000"
                        "00000000"
                        "00000000"
                        "00000000"
                        ), 1, 1
                    )));
    ASSERT_TRUE(isEqualStone(
                getStoneByString(
                    "11111111"
                    "11111111"
                    "11111111"
                    "01110101"
                    "00011111"
                    "00011111"
                    "00000100"
                    "00000000"
                    ),
                shiftDown(getStoneByString(
                        "01110101"
                        "00011111"
                        "00011111"
                        "00000100"
                        "00000000"
                        "00000000"
                        "00000000"
                        "00000000"
                        ), 3, 1
                    )));
}

TEST(procon26_modlib, shiftLeft)
{
    ASSERT_TRUE(isEqualStone(
                getStoneByString(
                    "11101010"
                    "00111110"
                    "00111110"
                    "00001000"
                    "00000000"
                    "00000000"
                    "00000000"
                    "00000000"
                    ),
                shiftLeft(getStoneByString(
                        "01110101"
                        "00011111"
                        "00011111"
                        "00000100"
                        "00000000"
                        "00000000"
                        "00000000"
                        "00000000"
                        ), 1
                    )));
    ASSERT_TRUE(isEqualStone(
                getStoneByString(
                    "10101000"
                    "11111000"
                    "11111000"
                    "00100000"
                    "00000000"
                    "00000000"
                    "00000000"
                    "00000000"
                    ),
                shiftLeft(getStoneByString(
                        "01110101"
                        "00011111"
                        "00011111"
                        "00000100"
                        "00000000"
                        "00000000"
                        "00000000"
                        "00000000"
                        ), 3
                    )));
    ASSERT_TRUE(isEqualStone(
                getStoneByString(
                    "11101011"
                    "00111111"
                    "00111111"
                    "00001001"
                    "00000001"
                    "00000001"
                    "00000001"
                    "00000001"
                    ),
                shiftLeft(getStoneByString(
                        "01110101"
                        "00011111"
                        "00011111"
                        "00000100"
                        "00000000"
                        "00000000"
                        "00000000"
                        "00000000"
                        ), 1, 1
                    )));
    ASSERT_TRUE(isEqualStone(
                getStoneByString(
                    "10101111"
                    "11111111"
                    "11111111"
                    "00100111"
                    "00000111"
                    "00000111"
                    "00000111"
                    "00000111"
                    ),
                shiftLeft(getStoneByString(
                        "01110101"
                        "00011111"
                        "00011111"
                        "00000100"
                        "00000000"
                        "00000000"
                        "00000000"
                        "00000000"
                        ), 3, 1
                    )));
}

TEST(procon26_modlib, shiftRight)
{
    ASSERT_TRUE(isEqualStone(
                getStoneByString(
                    "00111010"
                    "00001111"
                    "00001111"
                    "00000010"
                    "00000000"
                    "00000000"
                    "00000000"
                    "00000000"
                    ),
                shiftRight(getStoneByString(
                        "01110101"
                        "00011111"
                        "00011111"
                        "00000100"
                        "00000000"
                        "00000000"
                        "00000000"
                        "00000000"
                        ), 1
                    )));
    ASSERT_TRUE(isEqualStone(
                getStoneByString(
                    "00001110"
                    "00000011"
                    "00000011"
                    "00000000"
                    "00000000"
                    "00000000"
                    "00000000"
                    "00000000"
                    ),
                shiftRight(getStoneByString(
                        "01110101"
                        "00011111"
                        "00011111"
                        "00000100"
                        "00000000"
                        "00000000"
                        "00000000"
                        "00000000"
                        ), 3
                    )));
    ASSERT_TRUE(isEqualStone(
                getStoneByString(
                    "10111010"
                    "10001111"
                    "10001111"
                    "10000010"
                    "10000000"
                    "10000000"
                    "10000000"
                    "10000000"
                    ),
                shiftRight(getStoneByString(
                        "01110101"
                        "00011111"
                        "00011111"
                        "00000100"
                        "00000000"
                        "00000000"
                        "00000000"
                        "00000000"
                        ), 1, 1
                    )));
    ASSERT_TRUE(isEqualStone(
                getStoneByString(
                    "11101110"
                    "11100011"
                    "11100011"
                    "11100000"
                    "11100000"
                    "11100000"
                    "11100000"
                    "11100000"
                    ),
                shiftRight(getStoneByString(
                        "01110101"
                        "00011111"
                        "00011111"
                        "00000100"
                        "00000000"
                        "00000000"
                        "00000000"
                        "00000000"
                        ), 3, 1
                    )));
}

TEST(procon26_modlib, rotate90)
{
    Stone *stone = getStoneByString(
            "01110101"
            "00011111"
            "00011111"
            "00000100"
            "00000000"
            "00000000"
            "00000000"
            "00000000"
            );
    ASSERT_TRUE(isEqualStone(
                stone = rotate90(stone),
                getStoneByString(
                    "00000000"
                    "00000001"
                    "00000001"
                    "00000111"
                    "00000110"
                    "00001111"
                    "00000110"
                    "00000111"
                    )
                ));
    ASSERT_TRUE(isEqualStone(
                stone = rotate90(stone),
                getStoneByString(
                    "00000000"
                    "00000000"
                    "00000000"
                    "00000000"
                    "00100000"
                    "11111000"
                    "11111000"
                    "10101110"
                    )
                ));
    ASSERT_TRUE(isEqualStone(
                stone = rotate90(stone),
                getStoneByString(
                    "11100000"
                    "01100000"
                    "11110000"
                    "01100000"
                    "11100000"
                    "10000000"
                    "10000000"
                    "00000000"
                    )
                ));
    ASSERT_TRUE(isEqualStone(
                stone = rotate90(stone),
                getStoneByString(
                    "01110101"
                    "00011111"
                    "00011111"
                    "00000100"
                    "00000000"
                    "00000000"
                    "00000000"
                    "00000000"
                    )
                ));
}

TEST(procon26_modlib, rotate180)
{
    Stone *stone = getStoneByString(
            "01110101"
            "00011111"
            "00011111"
            "00000100"
            "00000000"
            "00000000"
            "00000000"
            "00000000"
            );
    ASSERT_TRUE(isEqualStone(
                stone = rotate180(stone),
                getStoneByString(
                    "00000000"
                    "00000000"
                    "00000000"
                    "00000000"
                    "00100000"
                    "11111000"
                    "11111000"
                    "10101110"
                    )
                ));
    ASSERT_TRUE(isEqualStone(
                stone = rotate180(stone),
                getStoneByString(
                    "01110101"
                    "00011111"
                    "00011111"
                    "00000100"
                    "00000000"
                    "00000000"
                    "00000000"
                    "00000000"
                    )
                ));
}

TEST(procon26_modlib, rotate270)
{
    Stone *stone = getStoneByString(
            "01110101"
            "00011111"
            "00011111"
            "00000100"
            "00000000"
            "00000000"
            "00000000"
            "00000000"
            );
    ASSERT_TRUE(isEqualStone(
                stone = rotate270(stone),
                getStoneByString(
                    "11100000"
                    "01100000"
                    "11110000"
                    "01100000"
                    "11100000"
                    "10000000"
                    "10000000"
                    "00000000"
                    )
                ));
    ASSERT_TRUE(isEqualStone(
                stone = rotate270(stone),
                getStoneByString(
                    "00000000"
                    "00000000"
                    "00000000"
                    "00000000"
                    "00100000"
                    "11111000"
                    "11111000"
                    "10101110"
                    )
                ));
    ASSERT_TRUE(isEqualStone(
                stone = rotate270(stone),
                getStoneByString(
                    "00000000"
                    "00000001"
                    "00000001"
                    "00000111"
                    "00000110"
                    "00001111"
                    "00000110"
                    "00000111"
                    )
                ));
    ASSERT_TRUE(isEqualStone(
                stone = rotate270(stone),
                getStoneByString(
                    "01110101"
                    "00011111"
                    "00011111"
                    "00000100"
                    "00000000"
                    "00000000"
                    "00000000"
                    "00000000"
                    )
                ));
}

TEST(procon26_modlib, rotate)
{
    Stone *stone = getStoneByString(
            "01110101"
            "00011111"
            "00011111"
            "00000100"
            "00000000"
            "00000000"
            "00000000"
            "00000000"
            );
    Stone *stone1 = getStoneByString(
            "01110101"
            "00011111"
            "00011111"
            "00000100"
            "00000000"
            "00000000"
            "00000000"
            "00000000"
            );
    Stone *stone2 = getStoneByString(
            "00000000"
            "00000001"
            "00000001"
            "00000111"
            "00000110"
            "00001111"
            "00000110"
            "00000111"
            );
    Stone *stone3 = getStoneByString(
            "00000000"
            "00000000"
            "00000000"
            "00000000"
            "00100000"
            "11111000"
            "11111000"
            "10101110"
            );
    Stone *stone4 = getStoneByString(
            "11100000"
            "01100000"
            "11110000"
            "01100000"
            "11100000"
            "10000000"
            "10000000"
            "00000000"
            );
    ASSERT_TRUE(isEqualStone(rotate(stone, 0), stone1));
    ASSERT_TRUE(isEqualStone(rotate(stone, 1), stone2));
    ASSERT_TRUE(isEqualStone(rotate(stone, 2), stone3));
    ASSERT_TRUE(isEqualStone(rotate(stone, 3), stone4));
    ASSERT_TRUE(isEqualStone(rotate(stone, 4), stone1));
    ASSERT_TRUE(isEqualStone(rotate(stone, 5), stone2));
    ASSERT_TRUE(isEqualStone(rotate(stone, 6), stone3));
    ASSERT_TRUE(isEqualStone(rotate(stone, 7), stone4));
    ASSERT_TRUE(isEqualStone(rotate(stone, 8), stone1));
}

TEST(procon26_module, cloneStone)
{
    Stone *stone = getStoneByString(
            "01110101"
            "00011111"
            "00011111"
            "00010100"
            "00010000"
            "00011110"
            "00011110"
            "00000010"
            );
    ASSERT_TRUE(isEqualStone(
                stone, cloneStone(stone)
                ));
}

TEST(procon26_modlib, quarryStone)
{
    Board *board = getBoardByString(
            "00100000000100000000000000000111"
            "00000000000000000000000000000111"
            "00000000001000000010000000000111"
            "00001000000000000100000000000111"
            "00000000000000000001000000000111"
            "00000000000000000001000000000111"
            "00000000000000100000000100000111"
            "00000000100010000000000000000111"
            "01000000000100000000000000000111"
            "11000000000000000000000000000111"
            "10000001000000000000000010000111"
            "00000000000001000000000000000111"
            "00000001000000000000001000001111"
            "00000000000000000000000000000111"
            "00000000000000000000000000100111"
            "00000000001000000000000000000111"
            "01000000000010000000000000000111"
            "00000000100000000100000000000111"
            "00001000000000000000000100000111"
            "00000000010000000000000001000111"
            "01000000000000000000000000000111"
            "00000001100001100100000000000111"
            "00000000001011000000000000000111"
            "00000000000000000000000000000111"
            "00000000000000000000000000000111"
            "00000000000001000000000000000111"
            "00000000000000000000000000100111"
            "00000000000000000000000000000111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            );
    ASSERT_TRUE(isEqualStone(
                quarryStone(
                    board, 7, 19
                    ),
                getStoneByString(
                    "00100000"
                    "00000000"
                    "11000011"
                    "00010110"
                    "00000000"
                    "00000000"
                    "00000010"
                    "00000000"
                    )));
    ASSERT_TRUE(isEqualStone(
                quarryStone(
                    board, 0, 0
                    ),
                getStoneByString(
                    "00100000"
                    "00000000"
                    "00000000"
                    "00001000"
                    "00000000"
                    "00000000"
                    "00000000"
                    "00000000"
                    )));
    ASSERT_TRUE(isEqualStone(
                quarryStone(
                    board, -1, -1
                    ),
                getStoneByString(
                    "11111111"
                    "10010000"
                    "10000000"
                    "10000000"
                    "10000100"
                    "10000000"
                    "10000000"
                    "10000000"
                    )));
    ASSERT_TRUE(isEqualStone(
                quarryStone(
                    board, -2, -2
                    ),
                getStoneByString(
                    "11111111"
                    "11111111"
                    "11001000"
                    "11000000"
                    "11000000"
                    "11000010"
                    "11000000"
                    "11000000"
                    )));
    ASSERT_TRUE(isEqualStone(
                quarryStone(
                    board, 24, 24
                    ),
                getStoneByString(
                    "00000111"
                    "00000111"
                    "00100111"
                    "00000111"
                    "11111111"
                    "11111111"
                    "11111111"
                    "11111111"
                    )));
    ASSERT_TRUE(isEqualStone(
                quarryStone(
                    board, 25, 25
                    ),
                getStoneByString(
                    "00001111"
                    "01001111"
                    "00001111"
                    "11111111"
                    "11111111"
                    "11111111"
                    "11111111"
                    "11111111"
                    )));
    ASSERT_TRUE(isEqualStone(
                quarryStone(
                    board, 26, 26
                    ),
                getStoneByString(
                    "10011111"
                    "00011111"
                    "11111111"
                    "11111111"
                    "11111111"
                    "11111111"
                    "11111111"
                    "11111111"
                    )));
    ASSERT_TRUE(isEqualStone(
                quarryStone(
                    board, 7, 19, 0
                    ),
                getStoneByString(
                    "00100000"
                    "00000000"
                    "11000011"
                    "00010110"
                    "00000000"
                    "00000000"
                    "00000010"
                    "00000000"
                    )));
    ASSERT_TRUE(isEqualStone(
                quarryStone(
                    board, 0, 0, 0
                    ),
                getStoneByString(
                    "00100000"
                    "00000000"
                    "00000000"
                    "00001000"
                    "00000000"
                    "00000000"
                    "00000000"
                    "00000000"
                    )));
    ASSERT_TRUE(isEqualStone(
                quarryStone(
                    board, -1, -1, 0
                    ),
                getStoneByString(
                    "00000000"
                    "00010000"
                    "00000000"
                    "00000000"
                    "00000100"
                    "00000000"
                    "00000000"
                    "00000000"
                    )));
    ASSERT_TRUE(isEqualStone(
                quarryStone(
                    board, -2, -2, 0
                    ),
                getStoneByString(
                    "00000000"
                    "00000000"
                    "00001000"
                    "00000000"
                    "00000000"
                    "00000010"
                    "00000000"
                    "00000000"
                    )));
    ASSERT_TRUE(isEqualStone(
                quarryStone(
                    board, 24, 24, 0
                    ),
                getStoneByString(
                    "00000111"
                    "00000111"
                    "00100111"
                    "00000111"
                    "11111111"
                    "11111111"
                    "11111111"
                    "11111111"
                    )));
    ASSERT_TRUE(isEqualStone(
                quarryStone(
                    board, 25, 25, 0
                    ),
                getStoneByString(
                    "00001110"
                    "01001110"
                    "00001110"
                    "11111110"
                    "11111110"
                    "11111110"
                    "11111110"
                    "00000000"
                    )));
    ASSERT_TRUE(isEqualStone(
                quarryStone(
                    board, 26, 26, 0
                    ),
                getStoneByString(
                    "10011100"
                    "00011100"
                    "11111100"
                    "11111100"
                    "11111100"
                    "11111100"
                    "00000000"
                    "00000000"
                    )));
}

TEST(procon26_modlib, cloneBoard)
{
    Board *board = getBoardByString(
            "00100000000100000000000000000111"
            "00000000000000000000000000000111"
            "00000000001000000010000000000111"
            "00001000000000000100000000000111"
            "00000000000000000001000000000111"
            "00000000000000000001000000000111"
            "00000000000000100000000100000111"
            "00000000100010000000000000000111"
            "01000000000100000000000000000111"
            "11000000000000000000000000000111"
            "10000001000000000000000010000111"
            "00000000000001000000000000000111"
            "00000001000000000000001000001111"
            "00000000000000000000000000000111"
            "00000000000000000000000000100111"
            "00000000001000000000000000000111"
            "01000000000010000000000000000111"
            "00000000100000000100000000000111"
            "00001000000000000000000100000111"
            "00000000010000000000000001000111"
            "01000000000000000000000000000111"
            "00000001100001100100000000000111"
            "00000000001011000000000000000111"
            "00000000000000000000000000000111"
            "00000000000000000000000000000111"
            "00000000000001000000000000000111"
            "00000000000000000000000000100111"
            "00000000000000000000000000000111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            );
    ASSERT_TRUE(isEqualBoard(
                board, cloneBoard(board)
                ));
}

TEST(procon26_modlib, isEqualBoard)
{
    ASSERT_TRUE(isEqualBoard(
                getBoardByString(
                    "00100000000100000000000000000111"
                    "00000000000000000000000000000111"
                    "00000000001000000010000000000111"
                    "00001000000000000100000000000111"
                    "00000000000000000001000000000111"
                    "00000000000000000001000000000111"
                    "00000000000000100000000100000111"
                    "00000000100010000000000000000111"
                    "01000000000100000000000000000111"
                    "11000000000000000000000000000111"
                    "10000001000000000000000010000111"
                    "00000000000001000000000000000111"
                    "00000001000000000000001000001111"
                    "00000000000000000000000000000111"
                    "00000000000000000000000000100111"
                    "00000000001000000000000000000111"
                    "01000000000010000000000000000111"
                    "00000000100000000100000000000111"
                    "00001000000000000000000100000111"
                    "00000000010000000000000001000111"
                    "01000000000000000000000000000111"
                    "00000001100001100100000000000111"
                    "00000000001011000000000000000111"
                    "00000000000000000000000000000111"
                    "00000000000000000000000000000111"
                    "00000000000001000000000000000111"
                    "00000000000000000000000000100111"
                    "00000000000000000000000000000111"
                    "11111111111111111111111111111111"
                    "11111111111111111111111111111111"
                    "11111111111111111111111111111111"
                    "11111111111111111111111111111111"
                    ),
        getBoardByString(
                "00100000000100000000000000000111"
                "00000000000000000000000000000111"
                "00000000001000000010000000000111"
                "00001000000000000100000000000111"
                "00000000000000000001000000000111"
                "00000000000000000001000000000111"
                "00000000000000100000000100000111"
                "00000000100010000000000000000111"
                "01000000000100000000000000000111"
                "11000000000000000000000000000111"
                "10000001000000000000000010000111"
                "00000000000001000000000000000111"
                "00000001000000000000001000001111"
                "00000000000000000000000000000111"
                "00000000000000000000000000100111"
                "00000000001000000000000000000111"
                "01000000000010000000000000000111"
                "00000000100000000100000000000111"
                "00001000000000000000000100000111"
                "00000000010000000000000001000111"
                "01000000000000000000000000000111"
                "00000001100001100100000000000111"
                "00000000001011000000000000000111"
                "00000000000000000000000000000111"
                "00000000000000000000000000000111"
                "00000000000001000000000000000111"
                "00000000000000000000000000100111"
                "00000000000000000000000000000111"
                "11111111111111111111111111111111"
                "11111111111111111111111111111111"
                "11111111111111111111111111111111"
                "11111111111111111111111111111111"
                )));
}

TEST(procon26_modlib, placeStone)
{
    Board *board = getBoardByString(
            "00100000000100000000000000000111"
            "00000000000000000000000000000111"
            "00000000001000000010000000000111"
            "00001000000000000100000000000111"
            "00000000000000000001000000000111"
            "00000000000000000001000000000111"
            "00000000000000100000000100000111"
            "00000000100010000000000000000111"
            "01000000000100000000000000000111"
            "11000000000000000000000000000111"
            "10000001000000000000000010000111"
            "00000000000001000000000000000111"
            "00000001000000000000001000001111"
            "00000000000000000000000000000111"
            "00000000000000000000000000100111"
            "00000000001000000000000000000111"
            "01000000000010000000000000000111"
            "00000000100000000100000000000111"
            "00001000000000000000000100000111"
            "00000000010000000000000001000111"
            "01000000000000000000000000000111"
            "00000001100001100100000000000111"
            "00000000001011000000000000000111"
            "00000000000000000000000000000111"
            "00000000000000000000000000000111"
            "00000000000001000000000000000111"
            "00000000000000000000000000100111"
            "00000000000000000000000000000111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            );
    Stone *stone = getStoneByString(
            "00000000"
            "01110000"
            "00110000"
            "00100000"
            "00100000"
            "00111000"
            "00000000"
            "00000000"
            );
    ASSERT_TRUE(isEqualBoard(
                placeStone(board, stone, 7, 19),
                getBoardByString(
                    "00100000000100000000000000000111"
                    "00000000000000000000000000000111"
                    "00000000001000000010000000000111"
                    "00001000000000000100000000000111"
                    "00000000000000000001000000000111"
                    "00000000000000000001000000000111"
                    "00000000000000100000000100000111"
                    "00000000100010000000000000000111"
                    "01000000000100000000000000000111"
                    "11000000000000000000000000000111"
                    "10000001000000000000000010000111"
                    "00000000000001000000000000000111"
                    "00000001000000000000001000001111"
                    "00000000000000000000000000000111"
                    "00000000000000000000000000100111"
                    "00000000001000000000000000000111"
                    "01000000000010000000000000000111"
                    "00000000100000000100000000000111"
                    "00001000000000000000000100000111"
                    "00000000010000000000000001000111"
                    "01000000111000000000000000000111"
                    "00000001111001100100000000000111"
                    "00000000011011000000000000000111"
                    "00000000010000000000000000000111"
                    "00000000011100000000000000000111"
                    "00000000000001000000000000000111"
                    "00000000000000000000000000100111"
                    "00000000000000000000000000000111"
                    "11111111111111111111111111111111"
                    "11111111111111111111111111111111"
                    "11111111111111111111111111111111"
                    "11111111111111111111111111111111"
                    )));
    ASSERT_TRUE(isEqualStone(
                quarryStone(placeStone(board, stone, 0, 0), 0, 0),
                getStoneByString(
                    "00100000"
                    "01110000"
                    "00110000"
                    "00101000"
                    "00100000"
                    "00111000"
                    "00000000"
                    "00000000"
                    )));
    ASSERT_TRUE(isEqualStone(
                quarryStone(placeStone(board, stone, -1, -1), 0, 0),
                getStoneByString(
                    "11100000"
                    "01100000"
                    "01000000"
                    "01001000"
                    "01110000"
                    "00000000"
                    "00000000"
                    "00000000"
                    )));
    ASSERT_TRUE(isEqualStone(
                quarryStone(placeStone(board, stone, -2, -2), 0, 0),
                getStoneByString(
                    "11100000"
                    "10000000"
                    "10000000"
                    "11101000"
                    "00000000"
                    "00000000"
                    "00000000"
                    "00000000"
                    )));
    ASSERT_TRUE(isEqualStone(
                quarryStone(placeStone(board, stone, BOARD_SIZE - STONE_SIZE, BOARD_SIZE - STONE_SIZE), BOARD_SIZE - STONE_SIZE, BOARD_SIZE - STONE_SIZE),
                getStoneByString(
                    "00000111"
                    "01110111"
                    "00110111"
                    "00100111"
                    "11111111"
                    "11111111"
                    "11111111"
                    "11111111"
                    )));
    ASSERT_TRUE(isEqualStone(
                quarryStone(placeStone(board, stone, BOARD_SIZE - STONE_SIZE + 1, BOARD_SIZE - STONE_SIZE + 1), BOARD_SIZE - STONE_SIZE, BOARD_SIZE - STONE_SIZE),
                getStoneByString(
                    "00000111"
                    "00000111"
                    "00111111"
                    "00011111"
                    "11111111"
                    "11111111"
                    "11111111"
                    "11111111"
                    )));
    ASSERT_TRUE(isEqualStone(
                quarryStone(placeStone(board, stone, BOARD_SIZE - STONE_SIZE + 2, BOARD_SIZE - STONE_SIZE + 2), BOARD_SIZE - STONE_SIZE, BOARD_SIZE - STONE_SIZE),
                getStoneByString(
                    "00000111"
                    "00000111"
                    "00100111"
                    "00011111"
                    "11111111"
                    "11111111"
                    "11111111"
                    "11111111"
                    )));
}

TEST(procon26_modlib, getCellOfStone)
{
    Stone *stone = getStoneByString(
            "01110101"
            "00011111"
            "00011111"
            "00010100"
            "00010000"
            "00011110"
            "00011110"
            "00000010"
            );
    ASSERT_FALSE(getCellOfStone(stone, 0, 0));
    ASSERT_FALSE(getCellOfStone(stone, 1, 1));
    ASSERT_FALSE(getCellOfStone(stone, 2, 2));
    ASSERT_TRUE(getCellOfStone(stone, 3, 4));
    ASSERT_TRUE(getCellOfStone(stone, 3, 3));
}

TEST(procon26_modlib, getCellOfBoard)
{
    Board *board = getBoardByString(
            "00100000000100000000000000000111"
            "00000000000000000000000000000111"
            "00000000001000000010000000000111"
            "00001000000000000100000000000111"
            "00000000000000000001000000000111"
            "00000000000000000001000000000111"
            "00000000000000100000000100000111"
            "00000000100010000000000000000111"
            "01000000000100000000000000000111"
            "11000000000000000000000000000111"
            "10000001000000000000000010000111"
            "00000000000001000000000000000111"
            "00000001000000000000001000001111"
            "00000000000000000000000000000111"
            "00000000000000000000000000100111"
            "00000000001000000000000000000111"
            "01000000000010000000000000000111"
            "00000000100000000100000000000111"
            "00001000000000000000000100000111"
            "00000000010000000000000001000111"
            "01000000000000000000000000000111"
            "00000001100001100100000000000111"
            "00000000001011000000000000000111"
            "00000000000000000000000000000111"
            "00000000000000000000000000000111"
            "00000000000001000000000000000111"
            "00000000000000000000000000100111"
            "00000000000000000000000000000111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            );
    ASSERT_FALSE(getCellOfBoard(board, 0, 0));
    ASSERT_FALSE(getCellOfBoard(board, 1, 0));
    ASSERT_TRUE(getCellOfBoard(board, 2, 0));
    ASSERT_TRUE(getCellOfBoard(board, 4, 3));
    ASSERT_FALSE(getCellOfBoard(board, 4, 4));
    ASSERT_FALSE(getCellOfBoard(board, 12, 11));
    ASSERT_TRUE(getCellOfBoard(board, 13, 11));
}

TEST(procon26_modlib, setCellOfStone)
{
    Stone *stone = getStoneByString(
            "01110101"
            "00011111"
            "00011111"
            "00010100"
            "00010000"
            "00011110"
            "00011110"
            "00000010"
            );
    setCellOfStone(stone, 0, 0, true);
    setCellOfStone(stone, 1, 0, false);
    setCellOfStone(stone, 2, 0, true);
    setCellOfStone(stone, 3, 0, false);
    setCellOfStone(stone, 4, 0, false);
    setCellOfStone(stone, 4, 3, true);
    ASSERT_TRUE(isEqualStone(stone,
                getStoneByString(
                    "10100101"
                    "00011111"
                    "00011111"
                    "00011100"
                    "00010000"
                    "00011110"
                    "00011110"
                    "00000010"
                    )));
}

TEST(procon26_modlib, setCellOfBoard)
{
    Board *board = getBoardByString(
            "00100000000100000000000000000111"
            "00000000000000000000000000000111"
            "00000000001000000010000000000111"
            "00001000000000000100000000000111"
            "00000000000000000001000000000111"
            "00000000000000000001000000000111"
            "00000000000000100000000100000111"
            "00000000100010000000000000000111"
            "01000000000100000000000000000111"
            "11000000000000000000000000000111"
            "10000001000000000000000010000111"
            "00000000000001000000000000000111"
            "00000001000000000000001000001111"
            "00000000000000000000000000000111"
            "00000000000000000000000000100111"
            "00000000001000000000000000000111"
            "01000000000010000000000000000111"
            "00000000100000000100000000000111"
            "00001000000000000000000100000111"
            "00000000010000000000000001000111"
            "01000000000000000000000000000111"
            "00000001100001100100000000000111"
            "00000000001011000000000000000111"
            "00000000000000000000000000000111"
            "00000000000000000000000000000111"
            "00000000000001000000000000000111"
            "00000000000000000000000000100111"
            "00000000000000000000000000000111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            );
    setCellOfBoard(board, 0, 0, 1);
    setCellOfBoard(board, 1, 0, 0);
    setCellOfBoard(board, 2, 0, 0);
    setCellOfBoard(board, 3, 0, 1);
    setCellOfBoard(board, 11, 0, 1);
    setCellOfBoard(board, 12, 11, 1);
    setCellOfBoard(board, 13, 11, 0);
    ASSERT_TRUE(isEqualBoard(board,
                getBoardByString(
                    "10010000000100000000000000000111"
                    "00000000000000000000000000000111"
                    "00000000001000000010000000000111"
                    "00001000000000000100000000000111"
                    "00000000000000000001000000000111"
                    "00000000000000000001000000000111"
                    "00000000000000100000000100000111"
                    "00000000100010000000000000000111"
                    "01000000000100000000000000000111"
                    "11000000000000000000000000000111"
                    "10000001000000000000000010000111"
                    "00000000000010000000000000000111"
                    "00000001000000000000001000001111"
                    "00000000000000000000000000000111"
                    "00000000000000000000000000100111"
                    "00000000001000000000000000000111"
                    "01000000000010000000000000000111"
                    "00000000100000000100000000000111"
                    "00001000000000000000000100000111"
                    "00000000010000000000000001000111"
                    "01000000000000000000000000000111"
                    "00000001100001100100000000000111"
                    "00000000001011000000000000000111"
                    "00000000000000000000000000000111"
                    "00000000000000000000000000000111"
                    "00000000000001000000000000000111"
                    "00000000000000000000000000100111"
                    "00000000000000000000000000000111"
                    "11111111111111111111111111111111"
                    "11111111111111111111111111111111"
                    "11111111111111111111111111111111"
                    "11111111111111111111111111111111"
                    )));
}

TEST(procon26_modlib, getGroupsCountStone)
{
    int groups_count = 0, count = 0;
    Stone *stone1 = getStoneByString(
            "1 1  1 1"
            "   11111"
            "   11111"
            "   111  "
            "   1    "
            "   1111 "
            "   1111 "
            "      1 "
            );
    getGroupsCountStone(stone1, 0, &groups_count, &count);
    ASSERT_EQ(groups_count, 4);
    ASSERT_EQ(count, 37);
    getGroupsCountStone(stone1, 1, &groups_count, &count);
    ASSERT_EQ(groups_count, 3);
    ASSERT_EQ(count, 27);
    Stone *stone2 = getStoneByString(
            " 11111 1"
            "   11111"
            "   11111"
            "   1 1  "
            "   11   "
            "   1111 "
            "   1111 "
            "      1 "
            );
    groups_count = 0, count = 0;
    getGroupsCountStone(stone2, 0, &groups_count, &count);
    ASSERT_EQ(groups_count, 4);
    ASSERT_EQ(count, 35);
    getGroupsCountStone(stone2, 1, &groups_count, &count);
    ASSERT_EQ(groups_count, 1);
    ASSERT_EQ(count, 29);
}

TEST(procon26_modlib, getGroupsCountBoard)
{
    int groups_count = 0, count = 0;
    Board *board1 = getBoardByString(
            "  1        1                 111"
            "          11                 111"
            "          1       1          111"
            "    1            1           111"
            "    1 1  1 1111  1 1         111"
            "       11111   11111         111"
            "111111111111   11111111111111111"
            "       111     111           111"
            " 1     1       1             111"
            "11     1111    1111          111"
            "1      1111    1111          111"
            "          1       1          111"
            "         1 1111  1 1 1      1111"
            "       11111   11111    1    111"
            "       11111   11111      1  111"
            "       111     111  1        111"
            " 1     1       1             111"
            "       1111    1111          111"
            "    1  1111    1111    1     111"
            "          1       1      1   111"
            " 1                           111"
            "       11    11  1           111"
            "          1 11               111"
            "                             111"
            "                             111"
            "             1               111"
            "                          1  111"
            "                             111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            );
    groups_count = 0; count = 0;
    getGroupsCountBoard(board1, 0, &groups_count, &count);
    ASSERT_EQ(groups_count, 5);
    ASSERT_EQ(count, 656);
    groups_count = 0; count = 0;
    getGroupsCountBoard(board1, 1, &groups_count, &count);
    ASSERT_EQ(groups_count, 25);
    ASSERT_EQ(count, 368);
    Board *board2 = getBoardByString(
            "1  1       1                 111"
            "                             111"
            "          1       1          111"
            "    1            1           111"
            "                   1         111"
            "                   1         111"
            "              1        1     111"
            "        1   1                111"
            " 1         1                 111"
            "11                           111"
            "1      1                1    111"
            "            1                111"
            "       1              1     1111"
            "                             111"
            "                          1  111"
            "          1                  111"
            " 1          1                111"
            "        1        1           111"
            "    1                  1     111"
            "         1               1   111"
            " 1                           111"
            "       11    11  1           111"
            "          1 11               111"
            "                             111"
            "                             111"
            "             1               111"
            "                          1  111"
            "                             111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            );
    groups_count = 0; count = 0;
    getGroupsCountBoard(board2, 0, &groups_count, &count);
    ASSERT_EQ(groups_count, 1);
    ASSERT_EQ(count, 767);
    groups_count = 0; count = 0;
    getGroupsCountBoard(board2, 1, &groups_count, &count);
    ASSERT_EQ(groups_count, 37);
    ASSERT_EQ(count, 257);
}

TEST(procon26_modlib, getGroupsStone)
{
    std::vector<Stone *> stones;
    int groups_count = 0, count = 0;
    Stone *stone1 = getStoneByString(
            "1 1  1 1"
            "   11111"
            "   11111"
            "   111  "
            "   1    "
            "   1111 "
            "   1111 "
            "      1 "
            );
    getGroupsStone(stone1, 0, stones, &groups_count, &count);
    ASSERT_EQ(groups_count, 4);
    ASSERT_EQ(count, 37);
    ASSERT_TRUE(isEqualStone(
                stones[0],
                getStoneByString(
                    " 1      "
                    "111     "
                    "111     "
                    "111     "
                    "111     "
                    "111     "
                    "111     "
                    "111111  "
                    )));
    ASSERT_TRUE(isEqualStone(
                stones[1],
                getStoneByString(
                    "   11   "
                    "        "
                    "        "
                    "        "
                    "        "
                    "        "
                    "        "
                    "        "
                    )));
    ASSERT_TRUE(isEqualStone(
                stones[2],
                getStoneByString(
                    "        "
                    "        "
                    "        "
                    "      11"
                    "    1111"
                    "       1"
                    "       1"
                    "       1"
                    )));
    ASSERT_TRUE(isEqualStone(
                stones[3],
                getStoneByString(
                    "      1 "
                    "        "
                    "        "
                    "        "
                    "        "
                    "        "
                    "        "
                    "        "
                    )));
    stones.clear();
    getGroupsStone(stone1, 1, stones, &groups_count, &count);
    ASSERT_EQ(groups_count, 3);
    ASSERT_EQ(count, 27);
    ASSERT_TRUE(isEqualStone(
                stones[0],
                getStoneByString(
                    "1       "
                    "        "
                    "        "
                    "        "
                    "        "
                    "        "
                    "        "
                    "        "
                    )));
    ASSERT_TRUE(isEqualStone(
                stones[1],
                getStoneByString(
                    "  1     "
                    "        "
                    "        "
                    "        "
                    "        "
                    "        "
                    "        "
                    "        "
                    )));
    ASSERT_TRUE(isEqualStone(
                stones[2],
                getStoneByString(
                    "     1 1"
                    "   11111"
                    "   11111"
                    "   111  "
                    "   1    "
                    "   1111 "
                    "   1111 "
                    "      1 "
                    )));
    Stone *stone2 = getStoneByString(
            " 11111 1"
            "   11111"
            "   11111"
            "   1 1  "
            "   11   "
            "   1111 "
            "   1111 "
            "      1 "
            );
    stones.clear();
    getGroupsStone(stone2, 0, stones, &groups_count, &count);
    ASSERT_EQ(groups_count, 4);
    ASSERT_EQ(count, 35);
    ASSERT_TRUE(isEqualStone(
                stones[0],
                getStoneByString(
                    "1       "
                    "111     "
                    "111     "
                    "111     "
                    "111     "
                    "111     "
                    "111     "
                    "111111  "
                    )));
    ASSERT_TRUE(isEqualStone(
                stones[1],
                getStoneByString(
                    "        "
                    "        "
                    "        "
                    "    1   "
                    "        "
                    "        "
                    "        "
                    "        "
                    )));
    ASSERT_TRUE(isEqualStone(
                stones[2],
                getStoneByString(
                    "        "
                    "        "
                    "        "
                    "      11"
                    "     111"
                    "       1"
                    "       1"
                    "       1"
                    )));
    ASSERT_TRUE(isEqualStone(
                stones[3],
                getStoneByString(
                    "      1 "
                    "        "
                    "        "
                    "        "
                    "        "
                    "        "
                    "        "
                    "        "
                    )));
    stones.clear();
    getGroupsStone(stone2, 1, stones, &groups_count, &count);
    ASSERT_EQ(groups_count, 1);
    ASSERT_EQ(count, 29);
    ASSERT_TRUE(isEqualStone(
                stones[0],
                getStoneByString(
                    " 11111 1"
                    "   11111"
                    "   11111"
                    "   1 1  "
                    "   11   "
                    "   1111 "
                    "   1111 "
                    "      1 "
                    )));
}

TEST(procon26_modlib, getGroupsBoard)
{
    std::vector<Board *> boards;
    int groups_count = 0, count = 0;
    Board *board1 = getBoardByString(
            "                             111"
            "                             111"
            "                             111"
            "                             111"
            "         1 1111  1 1         111"
            "       11111   11111         111"
            "111111111111   11111111111111111"
            "       111     111           111"
            " 1     1       1             111"
            "11     1111    1111          111"
            "1      1111    1111          111"
            "          1       1          111"
            "         111111  111         111"
            "       11111   11111         111"
            "       11111   11111         111"
            "       111     111           111"
            "       1       1             111"
            "       1111    1111          111"
            "       1111    1111          111"
            "          1       1          111"
            "                             111"
            "                             111"
            "                             111"
            "                             111"
            "                             111"
            "                             111"
            "                             111"
            "                             111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            );
    groups_count = 0; count = 0;
    getGroupsBoard(board1, 0, boards, &groups_count, &count);
    ASSERT_EQ(groups_count, 3);
    ASSERT_EQ(count, 684);
    ASSERT_TRUE(isEqualBoard(
                boards[0],
                getBoardByString(
                    "11111111111111111111111111111   "
                    "11111111111111111111111111111   "
                    "11111111111111111111111111111   "
                    "11111111111111111111111111111   "
                    "111111111 1    11 1 111111111   "
                    "1111111             111111111   "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    )));
    ASSERT_TRUE(isEqualBoard(
                boards[1],
                getBoardByString(
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "1111111           11111111111   "
                    "1 11111         1111111111111   "
                    "  11111            1111111111   "
                    " 111111            1111111111   "
                    "1111111111         1111111111   "
                    "111111111           111111111   "
                    "1111111     111     111111111   "
                    "1111111     111     111111111   "
                    "1111111   11111   11111111111   "
                    "1111111 1111111 1111111111111   "
                    "1111111    1111    1111111111   "
                    "1111111    1111    1111111111   "
                    "1111111111 1111111 1111111111   "
                    "11111111111111111111111111111   "
                    "11111111111111111111111111111   "
                    "11111111111111111111111111111   "
                    "11111111111111111111111111111   "
                    "11111111111111111111111111111   "
                    "11111111111111111111111111111   "
                    "11111111111111111111111111111   "
                    "11111111111111111111111111111   "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    )));
    ASSERT_TRUE(isEqualBoard(
                boards[2],
                getBoardByString(
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "            111                 "
                    "            111                 "
                    "          11111                 "
                    "        1111111                 "
                    "           1111                 "
                    "           1111                 "
                    "           1111111              "
                    "               11               "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    )));
    groups_count = 0; count = 0;
    boards.clear();
    getGroupsBoard(board1, 1, boards, &groups_count, &count);
    ASSERT_EQ(groups_count, 3);
    ASSERT_EQ(count, 340);
    ASSERT_TRUE(isEqualBoard(
                boards[0],
                getBoardByString(
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "         1 1111                 "
                    "       11111                    "
                    "111111111111                    "
                    "       111                      "
                    "       1                        "
                    "       1111                     "
                    "       1111                     "
                    "          1                     "
                    "         111111                 "
                    "       11111                    "
                    "       11111                    "
                    "       111                      "
                    "       1                        "
                    "       1111                     "
                    "       1111                     "
                    "          1                     "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    )));
    ASSERT_TRUE(isEqualBoard(
                boards[1],
                getBoardByString(
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    " 1                              "
                    "11                              "
                    "1                               "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    "                                "
                    )));
    ASSERT_TRUE(isEqualBoard(
                boards[2],
                getBoardByString(
                    "                             111"
                    "                             111"
                    "                             111"
                    "                             111"
                    "                 1 1         111"
                    "               11111         111"
                    "               11111111111111111"
                    "               111           111"
                    "               1             111"
                    "               1111          111"
                    "               1111          111"
                    "                  1          111"
                    "                 111         111"
                    "               11111         111"
                    "               11111         111"
                    "               111           111"
                    "               1             111"
                    "               1111          111"
                    "               1111          111"
                    "                  1          111"
                    "                             111"
                    "                             111"
                    "                             111"
                    "                             111"
                    "                             111"
                    "                             111"
                    "                             111"
                    "                             111"
                    "11111111111111111111111111111111"
                    "11111111111111111111111111111111"
                    "11111111111111111111111111111111"
                    "11111111111111111111111111111111"
                    )));
}

TEST(procon26_modlib, getTouchingStone)
{
    Board *board = getBoardByString(
            "00100000000100000000000000000000"
            "00000000000000000000000000000000"
            "00000000001000000010000000000000"
            "00001000000000000100000000000001"
            "00000000000000000001000000000000"
            "00000000000000000001000000000000"
            "00000000000000100000000100000001"
            "00000000100010000000000000000000"
            "01000000000100000000000000000100"
            "11000000000000000000000000000011"
            "10000001000000000000000010000110"
            "00000000000001000000000000000111"
            "00000001000000000000001000000000"
            "00000000000000000000000000010000"
            "00000000000000000000000000100010"
            "00000000001000000000000000000100"
            "01000000000010000000000000000110"
            "00000000100000000100000000000100"
            "00001000000000000000000100000000"
            "00000000010000000000000001000000"
            "01000000000000000000000000000000"
            "00000001100001100100000000001100"
            "00000000001011000000000000000100"
            "00000000000000000000000000000001"
            "00000000000000000000000000000100"
            "00000000000001000000000000000001"
            "00000000000000000000000000100000"
            "00000000000000000000000000000000"
            "00000000000000000000000000100010"
            "00000000001000000000000000000100"
            "01000000000010000000000000000110"
            "00000000100000000100000000000100"
            );

    Stone *stone1 = getStoneByString(
            "11000000"
            "11100000"
            "11000000"
            "10000000"
            "00000000"
            "00000000"
            "00000000"
            "00000000");

    Stone *stone2 = getStoneByString(
            "00000000"
            "00100000"
            "00110000"
            "00100000"
            "00100000"
            "00000000"
            "00000000"
            "00000000");

    Stone *stone3 = getStoneByString(
            "00000000"
            "00110000"
            "00010000"
            "00110000"
            "00000000"
            "00000000"
            "00000000"
            "00000000");

    int x, y;

    x = 0; y = 0;
    ASSERT_TRUE(isEqualStone(
                getTouchingStone(board, stone1, x, y, 0),
                getStoneByString(
                    "01000000"
                    "00100000"
                    "00000000"
                    "00000000"
                    "00000000"
                    "00000000"
                    "00000000"
                    "00000000")));
    ASSERT_TRUE(isEqualStone(
                getTouchingStone(board, stone1, x, y, 1),
                getStoneByString(
                    "11000000"
                    "10100000"
                    "10000000"
                    "10000000"
                    "00000000"
                    "00000000"
                    "00000000"
                    "00000000")));

    x = 4; y = 9;
    ASSERT_TRUE(isEqualStone(
                getTouchingStone(board, stone2, x, y, 0),
                getStoneByString(
                    "00000000"
                    "00100000"
                    "00010000"
                    "00100000"
                    "00000000"
                    "00000000"
                    "00000000"
                    "00000000")));
    ASSERT_TRUE(isEqualStone(
                getTouchingStone(board, stone2, x, y, 1),
                getStoneByString(
                    "00000000"
                    "00100000"
                    "00010000"
                    "00100000"
                    "00000000"
                    "00000000"
                    "00000000"
                    "00000000")));

    x = -2; y = 15;
    ASSERT_TRUE(isEqualStone(
                getTouchingStone(board, stone2, x, y, 0),
                getStoneByString(
                    "00000000"
                    "00100000"
                    "00010000"
                    "00000000"
                    "00000000"
                    "00000000"
                    "00000000"
                    "00000000")));
    ASSERT_TRUE(isEqualStone(
                getTouchingStone(board, stone2, x, y, 1),
                getStoneByString(
                    "00000000"
                    "00100000"
                    "00110000"
                    "00100000"
                    "00100000"
                    "00000000"
                    "00000000"
                    "00000000")));

    x = 28; y = 28;
    ASSERT_TRUE(isEqualStone(
                getTouchingStone(board, stone3, x, y, 0),
                getStoneByString(
                    "00000000"
                    "00100000"
                    "00010000"
                    "00100000"
                    "00000000"
                    "00000000"
                    "00000000"
                    "00000000")));
    ASSERT_TRUE(isEqualStone(
                getTouchingStone(board, stone3, x, y, 1),
                getStoneByString(
                    "00000000"
                    "00110000"
                    "00010000"
                    "00110000"
                    "00000000"
                    "00000000"
                    "00000000"
                    "00000000")));
}

TEST(procon26_modlib, canPlace)
{
    Board *board1 = getBoardByString(
            "00100000000100000000000000000111"
            "00000000000000000000000000000111"
            "00000000001000000010000000000111"
            "00001000000000000100000000000111"
            "00000000010111100101000000000111"
            "00000001111100011111000000000111"
            "11111111111100111111111111111111"
            "00000001110010011100000000000111"
            "01000001000100010000000000000111"
            "11000001111000011110000000000111"
            "10000001111000011110000010000111"
            "00000000001001000010000000000111"
            "00000001011111100111001000000111"
            "00000001111100011111000000010111"
            "00000001111100011111000000100111"
            "00000001111000011100000000000111"
            "01000001000010010000000000000111"
            "00000001111000011110000000000111"
            "00001001111000011110000100000111"
            "00000000011000000010000001000111"
            "01000000000000000000000000000111"
            "00000001100001100100000000001111"
            "00000000001011000000000000000111"
            "00000000000000000000000000000111"
            "00000000000000000000000000000111"
            "00000000000001000000000000000111"
            "00000000000000000000000000100111"
            "00000000000000000000000000000111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            );
    Board *board2 = getBoardByString(
            "00000000000000000000000000000111"
            "00000000000000000000000000000111"
            "00000000000000000000000000000111"
            "00000000000000000000000000000111"
            "00000000010111100101000000000111"
            "00000001111100011111000000000111"
            "11111111111100011111111111111111"
            "00000001110000011100000000000111"
            "01000001000000010000000000000111"
            "11000001111000011110000000000111"
            "10000001111000011110000000000111"
            "00000000001000000010000000000111"
            "00000000011111100111000000000111"
            "00000001111100011111000000000111"
            "00000001111100011111000000000111"
            "00000001110000011100000000000111"
            "00000001000000010000000000000111"
            "00000001111000011110000000000111"
            "00000001111000011110000000000111"
            "00000000001000000010000000000111"
            "00000000000000000000000000000111"
            "00000000000000000000000000000111"
            "00000000000000000000000000000111"
            "00000000000000000000000000000111"
            "00000000000000000000000000000111"
            "00000000000000000000000000000111"
            "00000000000000000000000000000111"
            "00000000000000000000000000000111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            );
    Stone *stone1 = getStoneByString(
            "11000000"
            "11100000"
            "11000000"
            "10000000"
            "00000000"
            "00000000"
            "00000000"
            "00000000"
            );
    ASSERT_FALSE(canPlace(board1, board2, stone1, 1, 1));
    ASSERT_TRUE(canPlace(board1, board2, stone1, 1, 1, true));
    ASSERT_TRUE(canPlace(board1, board2, stone1, 7, 1));
    ASSERT_FALSE(canPlace(board1, board2, stone1, 8, 1));
    ASSERT_TRUE(canPlace(board1, board2, stone1, 7, 1, 1));
    ASSERT_FALSE(canPlace(board1, board2, stone1, 8, 1, 1));
    ASSERT_TRUE(canPlace(board1, board2, stone1, 19, 8));
    ASSERT_FALSE(canPlace(board1, board2, stone1, 19, 9));
    ASSERT_FALSE(canPlace(board1, board2, stone1, 11, 16));
    ASSERT_TRUE(canPlace(board1, board2, stone1, 11, 17));
    ASSERT_FALSE(canPlace(board1, board2, stone1, 24, 6));
    ASSERT_FALSE(canPlace(board1, board2, stone1, 24, 7));
    ASSERT_FALSE(canPlace(board1, board2, stone1, 24, 8));
    ASSERT_FALSE(canPlace(board1, board2, stone1, 25, 6));
    ASSERT_TRUE(canPlace(board1, board2, stone1, 25, 7));
    ASSERT_FALSE(canPlace(board1, board2, stone1, 25, 8));
    ASSERT_TRUE(canPlace(board1, board2, stone1, 25, 8, 1));
    ASSERT_FALSE(canPlace(board1, board2, stone1, 26, 6));
    ASSERT_FALSE(canPlace(board1, board2, stone1, 26, 6, 1));
    ASSERT_TRUE(canPlace(board1, board2, stone1, 26, 7));
    ASSERT_TRUE(canPlace(board1, board2, stone1, 26, 8));
    ASSERT_FALSE(canPlace(board1, board2, stone1, 0, 1));
    ASSERT_FALSE(canPlace(board1, board2, stone1, 0, 23));
}

TEST(procon26_modlib, normalizeStone)
{
    ASSERT_TRUE(isEqualStone(
                normalizeStone(getStoneByString(
                        "00000000"
                        "00110000"
                        "00010000"
                        "00110000"
                        "00000000"
                        "00000000"
                        "00000000"
                        "00000000"
                        )),
                getStoneByString(
                    "11000000"
                    "01000000"
                    "11000000"
                    "00000000"
                    "00000000"
                    "00000000"
                    "00000000"
                    "00000000"
                    )));
    ASSERT_TRUE(isEqualStone(
                normalizeStone(getStoneByString(
                        "00000000"
                        "00000000"
                        "00000000"
                        "00000000"
                        "00000000"
                        "11000000"
                        "01000000"
                        "11000000"
                        )),
                getStoneByString(
                    "11000000"
                    "01000000"
                    "11000000"
                    "00000000"
                    "00000000"
                    "00000000"
                    "00000000"
                    "00000000"
                    )));
    ASSERT_TRUE(isEqualStone(
                normalizeStone(getStoneByString(
                        "00000011"
                        "00000001"
                        "00000011"
                        "00000000"
                        "00000000"
                        "00000000"
                        "00000000"
                        "00000000"
                        )),
                getStoneByString(
                    "11000000"
                    "01000000"
                    "11000000"
                    "00000000"
                    "00000000"
                    "00000000"
                    "00000000"
                    "00000000"
                    )));
    ASSERT_TRUE(isEqualStone(
                normalizeStone(getStoneByString(
                        "00000000"
                        "00000000"
                        "00000000"
                        "00000000"
                        "00000000"
                        "00000011"
                        "00000001"
                        "00000011"
                        )),
                getStoneByString(
                    "11000000"
                    "01000000"
                    "11000000"
                    "00000000"
                    "00000000"
                    "00000000"
                    "00000000"
                    "00000000"
                    )));
}

TEST(procon26_modlib, getState)
{
    Stone *stone = getStoneByString(
            "00000000"
            "00111000"
            "00010000"
            "00110000"
            "00000000"
            "00000000"
            "00000000"
            "00000000"
            );
    State *state;
    state = getState(stone, true, 1);
    ASSERT_TRUE(isEqualStone(stone, state));
    ASSERT_EQ(state->flipped, true);
    ASSERT_EQ(state->rotate, 1);
    state = getState(stone, false, 2);
    ASSERT_TRUE(isEqualStone(stone, state));
    ASSERT_EQ(state->flipped, false);
    ASSERT_EQ(state->rotate, 2);
}

TEST(procon26_modlib, getStatesOfStone)
{
    std::vector<State *> states;
    Stone *stone1 = getStoneByString(
            "00000000"
            "00111000"
            "00010000"
            "00110000"
            "00000000"
            "00000000"
            "00000000"
            "00000000"
            );
    getStatesOfStone(stone1, states);
    ASSERT_EQ(states.size(), 8);
    ASSERT_TRUE(isEqualStone(states[0], stone1));
    ASSERT_EQ(states[0]->flipped, false); ASSERT_EQ(states[0]->rotate, 0);
    ASSERT_TRUE(isEqualStone(states[1], rotate90(stone1)));
    ASSERT_EQ(states[1]->flipped, false); ASSERT_EQ(states[1]->rotate, 1);
    ASSERT_TRUE(isEqualStone(states[2], rotate180(stone1)));
    ASSERT_EQ(states[2]->flipped, false); ASSERT_EQ(states[2]->rotate, 2);
    ASSERT_TRUE(isEqualStone(states[3], rotate270(stone1)));
    ASSERT_EQ(states[3]->flipped, false); ASSERT_EQ(states[3]->rotate, 3);
    ASSERT_TRUE(isEqualStone(states[4], flip(stone1)));
    ASSERT_EQ(states[4]->flipped, true); ASSERT_EQ(states[4]->rotate, 0);
    ASSERT_TRUE(isEqualStone(states[5], rotate90(flip(stone1))));
    ASSERT_EQ(states[5]->flipped, true); ASSERT_EQ(states[5]->rotate, 1);
    ASSERT_TRUE(isEqualStone(states[6], rotate180(flip(stone1))));
    ASSERT_EQ(states[6]->flipped, true); ASSERT_EQ(states[6]->rotate, 2);
    ASSERT_TRUE(isEqualStone(states[7], rotate270(flip(stone1))));
    ASSERT_EQ(states[7]->flipped, true); ASSERT_EQ(states[7]->rotate, 3);
    states.clear();

    Stone *stone2 = getStoneByString(
            "00000000"
            "00110000"
            "00010000"
            "00011000"
            "00000000"
            "00000000"
            "00000000"
            "00000000"
            );
    getStatesOfStone(stone2, states);
    ASSERT_EQ(states.size(), 4);
    ASSERT_TRUE(isEqualStone(states[0], stone2));
    ASSERT_EQ(states[0]->flipped, false); ASSERT_EQ(states[0]->rotate, 0);
    ASSERT_TRUE(isEqualStone(states[1], rotate90(stone2)));
    ASSERT_EQ(states[1]->flipped, false); ASSERT_EQ(states[1]->rotate, 1);
    ASSERT_TRUE(isEqualStone(states[2], flip(stone2)));
    ASSERT_EQ(states[2]->flipped, true); ASSERT_EQ(states[2]->rotate, 0);
    ASSERT_TRUE(isEqualStone(states[3], rotate90(flip(stone2))));
    ASSERT_EQ(states[3]->flipped, true); ASSERT_EQ(states[3]->rotate, 1);
    states.clear();

    Stone *stone3 = getStoneByString(
            "00100000"
            "00111100"
            "00111000"
            "01111000"
            "00001000"
            "00000000"
            "00000000"
            "00000000"
            );
    getStatesOfStone(stone3, states);
    ASSERT_EQ(states.size(), 2);
    ASSERT_TRUE(isEqualStone(states[0], stone3));
    ASSERT_EQ(states[0]->flipped, false); ASSERT_EQ(states[0]->rotate, 0);
    ASSERT_TRUE(isEqualStone(states[1], flip(stone3)));
    ASSERT_EQ(states[1]->flipped, true); ASSERT_EQ(states[1]->rotate, 0);
    states.clear();

    Stone *stone4 = getStoneByString(
            "00000000"
            "00111000"
            "00010000"
            "01111100"
            "00000000"
            "00000000"
            "00000000"
            "00000000"
            );
    getStatesOfStone(stone4, states);
    ASSERT_EQ(states.size(), 4);
    ASSERT_TRUE(isEqualStone(states[0], stone4));
    ASSERT_EQ(states[0]->flipped, false); ASSERT_EQ(states[0]->rotate, 0);
    ASSERT_TRUE(isEqualStone(states[1], rotate90(stone4)));
    ASSERT_EQ(states[1]->flipped, false); ASSERT_EQ(states[1]->rotate, 1);
    ASSERT_TRUE(isEqualStone(states[2], rotate180(stone4)));
    ASSERT_EQ(states[2]->flipped, false); ASSERT_EQ(states[2]->rotate, 2);
    ASSERT_TRUE(isEqualStone(states[3], rotate270(stone4)));
    ASSERT_EQ(states[3]->flipped, false); ASSERT_EQ(states[3]->rotate, 3);
    states.clear();

    Stone *stone5 = getStoneByString(
            "00000000"
            "00111000"
            "00010000"
            "00111000"
            "00000000"
            "00000000"
            "00000000"
            "00000000"
            );
    getStatesOfStone(stone5, states);
    ASSERT_EQ(states.size(), 2);
    ASSERT_TRUE(isEqualStone(states[0], stone5));
    ASSERT_EQ(states[0]->flipped, false); ASSERT_EQ(states[0]->rotate, 0);
    ASSERT_TRUE(isEqualStone(states[1], rotate90(stone5)));
    ASSERT_EQ(states[1]->flipped, false); ASSERT_EQ(states[1]->rotate, 1);
    states.clear();

    Stone *stone6 = getStoneByString(
            "00000000"
            "00010000"
            "00111000"
            "00010000"
            "00000000"
            "00000000"
            "00000000"
            "00000000"
            );
    getStatesOfStone(stone6, states);
    ASSERT_EQ(states.size(), 1);
    ASSERT_TRUE(isEqualStone(states[0], stone6));
    ASSERT_EQ(states[0]->flipped, false); ASSERT_EQ(states[0]->rotate, 0);
    states.clear();
}

TEST(procon26_modlib, convertStonesToVectorOfStates)
{
    std::vector<std::vector<State *> > statesVector;
    Stone *stone1, *stone2, *stone3, *stone4, *stone5, *stone6;
    Stone stones[] = {
        *(stone1 = getStoneByString( "0000000000111000000100000011000000000000000000000000000000000000")),
        *(stone2 = getStoneByString( "0000000000110000000100000001100000000000000000000000000000000000")),
        *(stone3 = getStoneByString( "0010000000111100001110000111100000001000000000000000000000000000")),
        *(stone4 = getStoneByString( "0000000000111000000100000111110000000000000000000000000000000000")),
        *(stone5 = getStoneByString( "0000000000111000000100000011100000000000000000000000000000000000")),
        *(stone6 = getStoneByString( "0000000000010000001110000001000000000000000000000000000000000000"))
    };
    convertStonesToVectorOfStates(stones, 6, statesVector);

    ASSERT_EQ(statesVector[0].size(), 8);
    ASSERT_TRUE(isEqualStone(statesVector[0][0], stone1));
    ASSERT_EQ(statesVector[0][0]->flipped, false); ASSERT_EQ(statesVector[0][0]->rotate, 0);
    ASSERT_TRUE(isEqualStone(statesVector[0][1], rotate90(stone1)));
    ASSERT_EQ(statesVector[0][1]->flipped, false); ASSERT_EQ(statesVector[0][1]->rotate, 1);
    ASSERT_TRUE(isEqualStone(statesVector[0][2], rotate180(stone1)));
    ASSERT_EQ(statesVector[0][2]->flipped, false); ASSERT_EQ(statesVector[0][2]->rotate, 2);
    ASSERT_TRUE(isEqualStone(statesVector[0][3], rotate270(stone1)));
    ASSERT_EQ(statesVector[0][3]->flipped, false); ASSERT_EQ(statesVector[0][3]->rotate, 3);
    ASSERT_TRUE(isEqualStone(statesVector[0][4], flip(stone1)));
    ASSERT_EQ(statesVector[0][4]->flipped, true); ASSERT_EQ(statesVector[0][4]->rotate, 0);
    ASSERT_TRUE(isEqualStone(statesVector[0][5], rotate90(flip(stone1))));
    ASSERT_EQ(statesVector[0][5]->flipped, true); ASSERT_EQ(statesVector[0][5]->rotate, 1);
    ASSERT_TRUE(isEqualStone(statesVector[0][6], rotate180(flip(stone1))));
    ASSERT_EQ(statesVector[0][6]->flipped, true); ASSERT_EQ(statesVector[0][6]->rotate, 2);
    ASSERT_TRUE(isEqualStone(statesVector[0][7], rotate270(flip(stone1))));
    ASSERT_EQ(statesVector[0][7]->flipped, true); ASSERT_EQ(statesVector[0][7]->rotate, 3);

    ASSERT_EQ(statesVector[1].size(), 4);
    ASSERT_TRUE(isEqualStone(statesVector[1][0], stone2));
    ASSERT_EQ(statesVector[1][0]->flipped, false); ASSERT_EQ(statesVector[1][0]->rotate, 0);
    ASSERT_TRUE(isEqualStone(statesVector[1][1], rotate90(stone2)));
    ASSERT_EQ(statesVector[1][1]->flipped, false); ASSERT_EQ(statesVector[1][1]->rotate, 1);
    ASSERT_TRUE(isEqualStone(statesVector[1][2], flip(stone2)));
    ASSERT_EQ(statesVector[1][2]->flipped, true); ASSERT_EQ(statesVector[1][2]->rotate, 0);
    ASSERT_TRUE(isEqualStone(statesVector[1][3], rotate90(flip(stone2))));
    ASSERT_EQ(statesVector[1][3]->flipped, true); ASSERT_EQ(statesVector[1][3]->rotate, 1);

    ASSERT_EQ(statesVector[2].size(), 2);
    ASSERT_TRUE(isEqualStone(statesVector[2][0], stone3));
    ASSERT_EQ(statesVector[2][0]->flipped, false); ASSERT_EQ(statesVector[2][0]->rotate, 0);
    ASSERT_TRUE(isEqualStone(statesVector[2][1], flip(stone3)));
    ASSERT_EQ(statesVector[2][1]->flipped, true); ASSERT_EQ(statesVector[2][1]->rotate, 0);

    ASSERT_EQ(statesVector[3].size(), 4);
    ASSERT_TRUE(isEqualStone(statesVector[3][0], stone4));
    ASSERT_EQ(statesVector[3][0]->flipped, false); ASSERT_EQ(statesVector[3][0]->rotate, 0);
    ASSERT_TRUE(isEqualStone(statesVector[3][1], rotate90(stone4)));
    ASSERT_EQ(statesVector[3][1]->flipped, false); ASSERT_EQ(statesVector[3][1]->rotate, 1);
    ASSERT_TRUE(isEqualStone(statesVector[3][2], rotate180(stone4)));
    ASSERT_EQ(statesVector[3][2]->flipped, false); ASSERT_EQ(statesVector[3][2]->rotate, 2);
    ASSERT_TRUE(isEqualStone(statesVector[3][3], rotate270(stone4)));
    ASSERT_EQ(statesVector[3][3]->flipped, false); ASSERT_EQ(statesVector[3][3]->rotate, 3);

    ASSERT_EQ(statesVector[4].size(), 2);
    ASSERT_TRUE(isEqualStone(statesVector[4][0], stone5));
    ASSERT_EQ(statesVector[4][0]->flipped, false); ASSERT_EQ(statesVector[4][0]->rotate, 0);
    ASSERT_TRUE(isEqualStone(statesVector[4][1], rotate90(stone5)));
    ASSERT_EQ(statesVector[4][1]->flipped, false); ASSERT_EQ(statesVector[4][1]->rotate, 1);

    ASSERT_EQ(statesVector[5].size(), 1);
    ASSERT_TRUE(isEqualStone(statesVector[5][0], stone6));
    ASSERT_EQ(statesVector[5][0]->flipped, false); ASSERT_EQ(statesVector[5][0]->rotate, 0);
}

TEST(procon26_modlib, canPlace2)
{
    Board *board1 = getBoardByString(
        "10000000000000001111111111111111"
        "10000000000000001111111111111111"
        "11000000000000001111111111111111"
        "10000000000000001111111111111111"
        "10000000000000001111111111111111"
        "10000000000000001111111111111111"
        "11100000000000001111111111111111"
        "00000100000000001111111111111111"
        "00000000000000001111111111111111"
        "00000000000000001111111111111111"
        "00000000000000001111111111111111"
        "00000000010000001111111111111111"
        "11111111111111111111111111111111"
        "11111111111111111111111111111111"
        "11111111111111111111111111111111"
        "11111111111111111111111111111111"
        "11111111111111111111111111111111"
        "11111111111111111111111111111111"
        "11111111111111111111111111111111"
        "11111111111111111111111111111111"
        "11111111111111111111111111111111"
        "11111111111111111111111111111111"
        "11111111111111111111111111111111"
        "11111111111111111111111111111111"
        "11111111111111111111111111111111"
        "11111111111111111111111111111111"
        "11111111111111111111111111111111"
        "11111111111111111111111111111111"
        "11111111111111111111111111111111"
        "11111111111111111111111111111111"
        "11111111111111111111111111111111"
        "11111111111111111111111111111111"
        );
    Board *board2 = getBoardByString(
        "10000000000000000000000000000000"
        "10000000000000000000000000000000"
        "10000000000000000000000000000000"
        "10000000000000000000000000000000"
        "10000000000000000000000000000000"
        "10000000000000000000000000000000"
        "11100000000000000000000000000000"
        "00000000000000000000000000000000"
        "00000000000000000000000000000000"
        "00000000000000000000000000000000"
        "00000000000000000000000000000000"
        "00000000000000000000000000000000"
        "00000000000000000000000000000000"
        "00000000000000000000000000000000"
        "00000000000000000000000000000000"
        "00000000000000000000000000000000"
        "00000000000000000000000000000000"
        "00000000000000000000000000000000"
        "00000000000000000000000000000000"
        "00000000000000000000000000000000"
        "00000000000000000000000000000000"
        "00000000000000000000000000000000"
        "00000000000000000000000000000000"
        "00000000000000000000000000000000"
        "00000000000000000000000000000000"
        "00000000000000000000000000000000"
        "00000000000000000000000000000000"
        "00000000000000000000000000000000"
        "00000000000000000000000000000000"
        "00000000000000000000000000000000"
        "00000000000000000000000000000000"
        "00000000000000000000000000000000"
        );
    Stone *stone1 = getStoneByString(
        "00000000"
        "00010000"
        "00010000"
        "01111000"
        "00000000"
        "00000000"
        "00000000"
        "00000000"
        );
    Stone *stone2 = getStoneByString(
        "00000000"
        "01100000"
        "01100000"
        "01100000"
        "01100000"
        "00000000"
        "00000000"
        "00000000"
        );
    Stone *stone3 = getStoneByString(
        "10000000"
        "11000000"
        "01100000"
        "00110000"
        "00011000"
        "00001100"
        "00000110"
        "00000011"
        );

    ASSERT_FALSE(canPlace(board1, board2, rotate(flip(stone1), 2), -1, -4));
}

TEST(procon26_modlib, evalBoard)
{
    Board *board1 = getBoardByString(
            "00100000000100000000000000000111"
            "00000000000000000000000000000111"
            "00000000001000000010000000000111"
            "00001000000000000100000000000111"
            "00000000010111100101000000000111"
            "00000001111100011111000000000111"
            "11111111111100111111111111111111"
            "00000001110010011100000000000111"
            "01000001000100010000000000000111"
            "11000001111000011110000000000111"
            "10000001111000011110000010000111"
            "00000000001001000010000000000111"
            "00000001011111100111001000000111"
            "00000001111100011111000000010111"
            "00000001111100011111000000100111"
            "00000001111000011100000000000111"
            "01000001000010010000000000000111"
            "00000001111000011110000000000111"
            "00001001111000011110000100000111"
            "00000000011000000010000001000111"
            "01000000000000000000000000000111"
            "00000001100001100100000000001111"
            "00000000001011000000000000000111"
            "00000000000000000000000000000111"
            "00000000000000000000000000000111"
            "00000000000001000000000000000111"
            "00000000000000000000000000100111"
            "00000000000000000000000000000111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            );
    Board *board2 = getBoardByString(
            "00000000000000000000000000000111"
            "00000000000000000000000000000111"
            "00000000000000000000000000000111"
            "00000000000000000000000000000111"
            "00000000010111100101000000000111"
            "00000001111100011111000000000111"
            "11111111111100011111111111111111"
            "00000001110000011100000000000111"
            "01000001000000010000000000000111"
            "11000001111000011110000000000111"
            "10000001111000011110000000000111"
            "00000000001000000010000000000111"
            "00000000011111100111000000000111"
            "00000001111100011111000000000111"
            "00000001111100011111000000000111"
            "00000001110000011100000000000111"
            "00000001000000010000000000000111"
            "00000001111000011110000000000111"
            "00000001111000011110000000000111"
            "00000000001000000010000000000111"
            "00000000000000000000000000000111"
            "00000000000000000000000000000111"
            "00000000000000000000000000000111"
            "00000000000000000000000000000111"
            "00000000000000000000000000000111"
            "00000000000000000000000000000111"
            "00000000000000000000000000000111"
            "00000000000000000000000000000111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            );
    Board *board3 = getBoardByString(
            "00000000000000000000000000000000"
            "00000000000000000000000000000000"
            "00000000000000000000000000000000"
            "00000000000000000000000000000000"
            "00000000000000000000000000000000"
            "00000000000000000000000000000000"
            "00000000000000000000000000000000"
            "00000000000000000000000000000000"
            "00000000000000000000000000000000"
            "00000000000000000000000000000000"
            "00000000000000000000000000000000"
            "00000000000000000000000000000000"
            "00000000000000000000000000000000"
            "00000000000000000000000000000000"
            "00000000000000000000000000000000"
            "00000000000000000000000000000000"
            "00000000000000000000000000000000"
            "00000000000000000000000000000000"
            "00000000000000000000000000000000"
            "00000000000000000000000000000000"
            "00000000000000000000000000000000"
            "00000000000000000000000000000000"
            "00000000000000000000000000000000"
            "00000000000000000000000000000000"
            "00000000000000000000000000000000"
            "00000000000000000000000000000000"
            "00000000000000000000000000000000"
            "00000000000000000000000000000000"
            "00000000000000000000000000000000"
            "00000000000000000000000000000000"
            "00000000000000000000000000000000"
            "00000000000000000000000000000000"
            );
    Board *board4 = getBoardByString(
            "00010111111111111111111111111111"
            "00010111111111111111111111111111"
            "00010111111111111111111111111111"
            "11110111111111111111111111111111"
            "10000111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            );
    double b1 = evalBoard(board1);
    double b2 = evalBoard(board2);
    double b3 = evalBoard(board3);
    double b4 = evalBoard(board4);
    ASSERT_LT(b4, b1);
    ASSERT_LT(b1, b2);
    ASSERT_LT(b2, b3);
}

TEST(procon26_modlib, countScore)
{
    Problem prob;
    prob.board = *getBoardByString(
        "00000000000000001111111111111111"
        "00000000000000001111111111111111"
        "01000000000000001111111111111111"
        "00000000000000001111111111111111"
        "00000000000000001111111111111111"
        "00000000000000001111111111111111"
        "00000000000000001111111111111111"
        "00000100000000001111111111111111"
        "00000000000000001111111111111111"
        "00000000000000001111111111111111"
        "00000000000000001111111111111111"
        "00000000010000001111111111111111"
        "11111111111111111111111111111111"
        "11111111111111111111111111111111"
        "11111111111111111111111111111111"
        "11111111111111111111111111111111"
        "11111111111111111111111111111111"
        "11111111111111111111111111111111"
        "11111111111111111111111111111111"
        "11111111111111111111111111111111"
        "11111111111111111111111111111111"
        "11111111111111111111111111111111"
        "11111111111111111111111111111111"
        "11111111111111111111111111111111"
        "11111111111111111111111111111111"
        "11111111111111111111111111111111"
        "11111111111111111111111111111111"
        "11111111111111111111111111111111"
        "11111111111111111111111111111111"
        "11111111111111111111111111111111"
        "11111111111111111111111111111111"
        "11111111111111111111111111111111"
    );
    prob.num = 4;
    prob.stones = new Stone[prob.num];
    prob.stones[0] = *getStoneByString(
        "01000000"
        "01000000"
        "01000000"
        "01000000"
        "01000000"
        "01000000"
        "01110000"
        "00000000"
    );
    prob.stones[1] = *getStoneByString(
        "00000000"
        "00010000"
        "00010000"
        "01111000"
        "00000000"
        "00000000"
        "00000000"
        "00000000"
    );
    prob.stones[2] = *getStoneByString(
        "00000000"
        "01100000"
        "01100000"
        "01100000"
        "01100000"
        "00000000"
        "00000000"
        "00000000"
    );
    prob.stones[3] = *getStoneByString(
        "10000000"
        "11000000"
        "01100000"
        "00110000"
        "00011000"
        "00001100"
        "00000110"
        "00000011"
    );
    Answer ans1, ans2, ans4, ans5;
    Answers answer1(0), answer2(0);
    ans1.X = 3; ans1.Y = 2; ans1.flipped = false; ans1.rotate = 0; ans1.stoneNumber = 0;
	ans2.X = -2; ans2.Y = -3; ans2.flipped = true; ans2.rotate = 1; ans2.stoneNumber = 1;
	ans4.X = 6; ans4.Y = 0; ans4.flipped = false; ans4.rotate = 3; ans4.stoneNumber = 3;
    ans5.X = -7; ans5.Y = 0; ans4.flipped = false; ans5.rotate = 3; ans5.stoneNumber = 4;
	answer1.answers.push_back(ans1);
	answer1.answers.push_back(ans2);
	answer1.answers.push_back(ans4);
    answer2.answers.push_back(ans1);
    answer2.answers.push_back(ans2);
    answer2.answers.push_back(ans5);
    
    ASSERT_EQ(countScore(answer1, prob), 159);
    ASSERT_EQ(countScore(answer2, prob), 174);
}

TEST(procon26_modlib, BoardNOT)
{
    Board *board1 = getBoardByString(
            "  1        1                 111"
            "                             111"
            "          1       1          111"
            "    1            1           111"
            "         1 1111  1 1         111"
            "       11111   11111         111"
            "111111111111  111111111111111111"
            "       111  1  111           111"
            " 1     1   1   1             111"
            "11     1111    1111          111"
            "1      1111    1111     1    111"
            "          1  1    1          111"
            "       1 111111  111  1      111"
            "       11111   11111       1 111"
            "       11111   11111      1  111"
            "       1111    111           111"
            " 1     1    1  1             111"
            "       1111    1111          111"
            "    1  1111    1111    1     111"
            "         11       1      1   111"
            " 1                           111"
            "       11    11  1          1111"
            "          1 11               111"
            "                             111"
            "                             111"
            "             1               111"
            "                          1  111"
            "                             111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            );
    ASSERT_TRUE(isEqualBoard(BoardNOT(board1), getBoardByString(
            "11 11111111 11111111111111111   "
            "11111111111111111111111111111   "
            "1111111111 1111111 1111111111   "
            "1111 111111111111 11111111111   "
            "111111111 1    11 1 111111111   "
            "1111111     111     111111111   "
            "            11                  "
            "1111111   11 11   11111111111   "
            "1 11111 111 111 1111111111111   "
            "  11111    1111    1111111111   "
            " 111111    1111    11111 1111   "
            "1111111111 11 1111 1111111111   "
            "1111111 1      11   11 111111   "
            "1111111     111     1111111 1   "
            "1111111     111     111111 11   "
            "1111111    1111   11111111111   "
            "1 11111 1111 11 1111111111111   "
            "1111111    1111    1111111111   "
            "1111 11    1111    1111 11111   "
            "111111111  1111111 111111 111   "
            "1 111111111111111111111111111   "
            "1111111  1111  11 1111111111    "
            "1111111111 1  111111111111111   "
            "11111111111111111111111111111   "
            "11111111111111111111111111111   "
            "1111111111111 111111111111111   "
            "11111111111111111111111111 11   "
            "11111111111111111111111111111   "
            "                                "
            "                                "
            "                                "
            "                                "
                    )));
}

TEST(procon26_modlib, BoardAND)
{
    Board *board1 = getBoardByString(
            "  1        1                 111"
            "                             111"
            "          1       1          111"
            "    1            1           111"
            "         1 1111  1 1         111"
            "       11111   11111         111"
            "111111111111  111111111111111111"
            "       111  1  111           111"
            " 1     1   1   1             111"
            "11     1111    1111          111"
            "1      1111    1111     1    111"
            "          1  1    1          111"
            "       1 111111  111  1      111"
            "       11111   11111       1 111"
            "       11111   11111      1  111"
            "       1111    111           111"
            " 1     1    1  1             111"
            "       1111    1111          111"
            "    1  1111    1111    1     111"
            "         11       1      1   111"
            " 1                           111"
            "       11    11  1          1111"
            "          1 11               111"
            "                             111"
            "                             111"
            "             1               111"
            "                          1  111"
            "                             111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            );
    Board *board2 = getBoardByString(
            "                    111111111111"
            "                    111111111111"
            "                    111111111111"
            "                    111111111111"
            "                 1 1111111111111"
            "               11111111111111111"
            "               11111111111111111"
            "               111           111"
            "               1             111"
            "               1111          111"
            "               1111          111"
            "                  1          111"
            "                 111         111"
            "               11111         111"
            "               11111         111"
            "               111           111"
            "               1             111"
            "               1111          111"
            "               1111          111"
            "                  1          111"
            "                   11111     111"
            "                   11111     111"
            "                   11111     111"
            "                   11111     111"
            "    1111111        11111     111"
            "    1111111        11111     111"
            "    1111111                  111"
            "    1111111                  111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            );
    ASSERT_TRUE(isEqualBoard(BoardAND(board1, board2), getBoardByString(
            "                             111"
            "                             111"
            "                             111"
            "                             111"
            "                 1 1         111"
            "               11111         111"
            "               11111111111111111"
            "               111           111"
            "               1             111"
            "               1111          111"
            "               1111          111"
            "                  1          111"
            "                 111         111"
            "               11111         111"
            "               11111         111"
            "               111           111"
            "               1             111"
            "               1111          111"
            "               1111          111"
            "                  1          111"
            "                             111"
            "                             111"
            "                             111"
            "                             111"
            "                             111"
            "                             111"
            "                             111"
            "                             111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
                    )));
}

TEST(procon26_modlib, BoardXOR)
{
    Board *board1 = getBoardByString(
            "  1        1                 111"
            "                             111"
            "          1       1          111"
            "    1            1           111"
            "         1 1111  1 1         111"
            "       11111   11111         111"
            "111111111111  111111111111111111"
            "       111  1  111           111"
            " 1     1   1   1             111"
            "11     1111    1111          111"
            "1      1111    1111     1    111"
            "          1  1    1          111"
            "       1 111111  111  1      111"
            "       11111   11111       1 111"
            "       11111   11111      1  111"
            "       1111    111           111"
            " 1     1    1  1             111"
            "       1111    1111          111"
            "    1  1111    1111    1     111"
            "         11       1      1   111"
            " 1                           111"
            "       11    11  1          1111"
            "          1 11               111"
            "                             111"
            "                             111"
            "             1               111"
            "                          1  111"
            "                             111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            );
    Board *board2 = getBoardByString(
            "                    111111111111"
            "                    111111111111"
            "                    111111111111"
            "                    111111111111"
            "                 1 1111111111111"
            "               11111111111111111"
            "               11111111111111111"
            "               111           111"
            "               1             111"
            "               1111          111"
            "               1111          111"
            "                  1          111"
            "                 111         111"
            "               11111         111"
            "               11111         111"
            "               111           111"
            "               1             111"
            "               1111          111"
            "               1111          111"
            "                  1          111"
            "                   11111     111"
            "                   11111     111"
            "                   11111     111"
            "                   11111     111"
            "    1111111        11111     111"
            "    1111111        11111     111"
            "    1111111                  111"
            "    1111111                  111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            );
    ASSERT_TRUE(isEqualBoard(BoardXOR(board1, board2), getBoardByString(
            "  1        1        111111111   "
            "                    111111111   "
            "          1       1 111111111   "
            "    1            1  111111111   "
            "         1 1111     111111111   "
            "       11111        111111111   "
            "111111111111  1                 "
            "       111  1                   "
            " 1     1   1                    "
            "11     1111                     "
            "1      1111             1       "
            "          1  1                  "
            "       1 111111       1         "
            "       11111               1    "
            "       11111              1     "
            "       1111                     "
            " 1     1    1                   "
            "       1111                     "
            "    1  1111            1        "
            "         11              1      "
            " 1                 11111        "
            "       11    11  1 11111    1   "
            "          1 11     11111        "
            "                   11111        "
            "    1111111        11111        "
            "    1111111  1     11111        "
            "    1111111               1     "
            "    1111111                     "
            "                                "
            "                                "
            "                                "
            "                                "
                    )));
}

TEST(procon26_modlib, BoardOR)
{
    Board *board1 = getBoardByString(
            "  1        1                 111"
            "                             111"
            "          1       1          111"
            "    1            1           111"
            "         1 1111  1 1         111"
            "       11111   11111         111"
            "111111111111  111111111111111111"
            "       111  1  111           111"
            " 1     1   1   1             111"
            "11     1111    1111          111"
            "1      1111    1111     1    111"
            "          1  1    1          111"
            "       1 111111  111  1      111"
            "       11111   11111       1 111"
            "       11111   11111      1  111"
            "       1111    111           111"
            " 1     1    1  1             111"
            "       1111    1111          111"
            "    1  1111    1111    1     111"
            "         11       1      1   111"
            " 1                           111"
            "       11    11  1          1111"
            "          1 11               111"
            "                             111"
            "                             111"
            "             1               111"
            "                          1  111"
            "                             111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            );
    Board *board2 = getBoardByString(
            "                    111111111111"
            "                    111111111111"
            "                    111111111111"
            "                    111111111111"
            "                 1 1111111111111"
            "               11111111111111111"
            "               11111111111111111"
            "               111           111"
            "               1             111"
            "               1111          111"
            "               1111          111"
            "                  1          111"
            "                 111         111"
            "               11111         111"
            "               11111         111"
            "               111           111"
            "               1             111"
            "               1111          111"
            "               1111          111"
            "                  1          111"
            "                   11111     111"
            "                   11111     111"
            "                   11111     111"
            "                   11111     111"
            "    1111111        11111     111"
            "    1111111        11111     111"
            "    1111111                  111"
            "    1111111                  111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            );
    ASSERT_TRUE(isEqualBoard(BoardOR(board1, board2), getBoardByString(
            "  1        1        111111111111"
            "                    111111111111"
            "          1       1 111111111111"
            "    1            1  111111111111"
            "         1 1111  1 1111111111111"
            "       11111   11111111111111111"
            "111111111111  111111111111111111"
            "       111  1  111           111"
            " 1     1   1   1             111"
            "11     1111    1111          111"
            "1      1111    1111     1    111"
            "          1  1    1          111"
            "       1 111111  111  1      111"
            "       11111   11111       1 111"
            "       11111   11111      1  111"
            "       1111    111           111"
            " 1     1    1  1             111"
            "       1111    1111          111"
            "    1  1111    1111    1     111"
            "         11       1      1   111"
            " 1                 11111     111"
            "       11    11  1 11111    1111"
            "          1 11     11111     111"
            "                   11111     111"
            "    1111111        11111     111"
            "    1111111  1     11111     111"
            "    1111111               1  111"
            "    1111111                  111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
            "11111111111111111111111111111111"
                    )));
}
